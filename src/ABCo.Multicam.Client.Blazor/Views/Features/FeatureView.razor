@using ABCo.Multicam.Client.Blazor.Views.Hosting
@using ABCo.Multicam.Client.ViewModels.Hosting;
@using ABCo.Multicam.Server.Features;
@using ABCo.Multicam.Client.Blazor.Views.Features.Switcher
@using ABCo.Multicam.Client.ViewModels.Features;
@using ABCo.Multicam.Client.ViewModels.Features.Switcher;
@inherits AnimBasedVMBoundComponent<IProjectFeaturesVM>

<div class="featureView">
	<div class="logoSection">
		<div class="abcoLogo">
			<img src="_content/ABCo.Multicam.Client.Blazor/img/branding/ABCo_Logo_v2_White.svg" />
			<p class="abcoMulticamText">Multicamera Platform</p>
		</div>
	</div>

	<div class="options">
		<!-- Hosting -->
		<HostingMainViewButton VM="HostingVM" />

		<!-- Feature Buttons -->
		<div class="strip">
			<a class="stripOption firstOnARow btnLikeHighlight" @onclick="e => VM.CreateFeature(new(e.ClientX, e.ClientY))">
				New Feature
				<img src="_content/ABCo.Multicam.Client.Blazor/img/icons/smallDownArrow.svg" />
			</a>
		</div>
	</div>

	<!-- Feature Mobile View -->
	@if (VM.MobileView != null)
	{
		<div class="mobileView @MobileViewClasses">
			<FeatureMobileView VM="VM.MobileView" />
		</div>
	}

	<!-- Main Features List -->
	<ul class="items">
		@foreach (var item in VM.Items)
		{
			<li class="item">
				<FeatureViewItem VM="item" />
			</li>
		}
	</ul>
</div>

@code {

	[Parameter]
	public IServerHostingVM HostingVM { get; set; } = null!;

	// Animation code for mobile view menu
	string MobileViewClasses = "";

	public override async Task PerformAnimationAndDelay(string propertyName)
	{
		if (VM.MobileView != null)
		{
			if (propertyName == nameof(ProjectFeaturesVM.MobileView))
			{
				MobileViewClasses = "noInteraction slideOut";
				StateHasChanged();
				await Task.Delay(200);
			}
		}
		else MobileViewClasses = "";

		await Task.CompletedTask;
	}
}