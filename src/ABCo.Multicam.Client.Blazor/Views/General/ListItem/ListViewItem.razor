@using ABCo.Multicam.Client.Blazor.Views.Features.Switchers.Content
@using ABCo.Multicam.Client.Blazor.Views.Scripting.Buttons
@using ABCo.Multicam.Client.Presenters.Features.Switchers
@using ABCo.Multicam.Client.ViewModels.General
@using ABCo.Multicam.Client.ViewModels.Scripting.Buttons
@typeparam TContent
@inherits VMBoundComponent<INamedMovableListItemVM<TContent>>

<li>
    <div class="titlebar">
        <!-- Expansion -->
        <a class="btnDropDown btnLikeHighlight expandBtn" @onclick="VM.ToggleExpansion">
            @if (VM.IsExpanded)
            {
                <img class="expandedImg noBtnImgPadding" src="_content/ABCo.Multicam.Client.Blazor/img/icons/smallDownArrow.svg" />
            }
            else
            {
                <img class="noBtnImgPadding" src="_content/ABCo.Multicam.Client.Blazor/img/icons/smallRightArrow.svg" />
            }
        </a>

        <!-- Title -->
        <NamedListItemTitle VM="VM" />

        <!-- Context Btn -->
        <div class="contextButton">
            @if (VM.Content is IScriptButtonVM buttonTitle)
            {
                <ScriptButtonExecuteButtonContainer VM="buttonTitle.Script" />
            }
        </div>
        
        <!-- Edit Btn -->
        <NamedListItemEditButton VM="VM" />
    </div>

    @if (VM.IsExpanded)
    {
        <div class="bordered">
            @if (VM.Content is ISwitcherVM switcher)
            {
                <SwitcherContent VM="switcher" />
            }
            else if (VM.Content is IScriptButtonVM button)
            {
                <ScriptButtonContent VM="button" />
            }
        </div>
    }
</li>